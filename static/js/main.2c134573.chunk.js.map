{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","Todo","todo","map","item","filter","el","TodoList","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gOA2BeA,EAzBF,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,aAAcC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,UAe1C,OACI,iCACI,uBAAOC,MAAOD,EAAWE,SAfR,SAACC,GACtBC,QAAQC,IAAIF,EAAEG,OAAOL,OACrBJ,EAAaM,EAAEG,OAAOL,QAamCM,KAAK,OAAOC,UAAU,eAC3E,wBAAQC,QAXU,SAACN,GACvBA,EAAEO,iBACFX,EAAS,GAAD,mBACDD,GADC,CACM,CAACa,KAAKX,EAAWY,WAAW,EAAOC,GAAkB,IAAdC,KAAKC,aAE1DlB,EAAa,KAM2BW,UAAU,cAAcD,KAAK,SAAjE,SACI,mBAAGC,UAAU,6B,OCYdQ,EA/BF,SAAC,GAAoC,IAAnCL,EAAkC,EAAlCA,KAAMM,EAA4B,EAA5BA,KAAOnB,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAiB/B,OACI,sBAAKS,UAAU,OAAf,UACI,oBAAIA,UAAS,oBAAeS,EAAKL,UAAY,YAAc,IAA3D,SACKD,IACL,wBAAQF,QAhBQ,WACpBV,EAASD,EAAMoB,KAAI,SAACC,GAChB,OAAGA,EAAKN,KAAOI,EAAKJ,GAChB,2BACGM,GADH,IACSP,WAAYO,EAAKP,YAGvBO,OAS2BX,UAAU,eAA5C,SACI,mBAAGA,UAAU,mBAEjB,wBAAQC,QAtBM,WAClBV,EAASD,EAAMsB,QAAO,SAACC,GAAD,OAAQA,EAAGR,KAAMI,EAAKJ,QAqBRL,UAAU,YAA1C,SACI,mBAAGA,UAAU,uBCNdc,EAlBE,SAAC,GAAuB,IAAtBxB,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACtB,OACI,qBAAKS,UAAU,iBAAf,SACI,oBAAIA,UAAU,YAAd,SACEV,EAAMoB,KAAI,SAACD,GAAD,OACR,cAAC,EAAD,CACAlB,SAAUA,EACVD,MAAOA,EAEPmB,KAAMA,EACNN,KAAMM,EAAKN,MAFNM,EAAKJ,YCeXU,MApBf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOxB,EAAP,KAAkBH,EAAlB,KACA,EAA0B2B,mBAAS,IAAnC,mBAAO1B,EAAP,KAAcC,EAAd,KACA,OACE,sBAAKS,UAAU,MAAf,UACE,iCACA,8CAEA,cAAC,EAAD,CACER,UAAWA,EACXF,MAAOA,EACPC,SAAUA,EACVF,aAAcA,IAEhB,cAAC,EAAD,CAAUE,SAAUA,EAAUD,MAAOA,QCR5B2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAAO,cAAC,EAAD,IACdC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2c134573.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = ({setInputText, todos, setTodos, inputText}) => {\r\n\r\n    const inputTextHandler = (e) =>{\r\n        console.log(e.target.value);\r\n        setInputText(e.target.value);\r\n    };\r\n\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos, {text:inputText, completed: false, id: Math.random()*1000 }\r\n        ]);\r\n        setInputText(\"\");\r\n    };\r\n\r\n    return (\r\n        <form>\r\n            <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n            <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Todo = ({text, todo,  todos, setTodos}) => {\r\n\r\n    const deleteHandler = () =>{\r\n        setTodos(todos.filter((el) => el.id !==todo.id));\r\n    };\r\n    const completeHandler = () => {\r\n        setTodos(todos.map((item) => {\r\n            if(item.id === todo.id){\r\n                return{\r\n                ...item, completed: !item.completed\r\n                };\r\n            }\r\n            return item; \r\n        })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\r\n                {text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = ({todos, setTodos}) => {\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n             {todos.map((todo) => (\r\n                <Todo\r\n                setTodos={setTodos} \r\n                todos={todos}\r\n                key={todo.id}\r\n                todo={todo}\r\n                text={todo.text} \r\n                />\r\n            ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React, { useState } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  return (\n    <div className=\"App\">\n      <header>\n      <h1>Todo Lists</h1>\n      </header>\n      <Form \n        inputText={inputText}\n        todos={todos} \n        setTodos={setTodos}\n        setInputText={setInputText}\n         />\n      <TodoList setTodos={setTodos} todos={todos} />\n  \n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}